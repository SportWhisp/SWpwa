name: Aggiorna SHOW (analysis + show)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "30 7 * * *"   # 09:30 IT durante CEST (tutti i giorni)

jobs:
  update-show:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install deps
        run: npm ci

      - name: Build Next
        run: npm run build

      - name: Start Next server
        run: |
          nohup npm start > server.log 2>&1 &
          echo "Avvio server..."
          sleep 10

      # -------- 09:30 IT -> esegui genAnalysis (Top + Soc) --------
      - name: Esegui genAnalysis (Top leghe) & genAnalysisSoc (Altre)
        run: |
          echo ">>> genAnalysis (Top)"
          for league in italia francia germania spagna inghilterra portogallo olanda; do
            curl -fSs "http://localhost:3000/api/genAnalysis?league=$league"
          done

          echo ">>> genAnalysisSoc (Altre)"
          for league in turchia austria belgio danimarca grecia polonia romania svizzera ungheria; do
            curl -fSs "http://localhost:3000/api/genAnalysisSoc?league=$league&season=2025-2026"
          done

      # -------- 09:30 IT -> esegui genShow (Top + Soc) --------
      - name: Esegui genShow (Top leghe) & genShowSoc (Altre)
        run: |
          echo ">>> genShow (Top)"
          for nazione in italia francia germania spagna inghilterra portogallo olanda; do
            curl -fSs "http://localhost:3000/api/genShow?nazione=$nazione"
          done

          echo ">>> genShowSoc (Altre)"
          for nazione in turchia austria belgio danimarca grecia polonia romania svizzera ungheria; do
            curl -fSs "http://localhost:3000/api/genShowSoc?nazione=$nazione"
          done

      - name: Log server Next (tail)
        if: ${{ always() }}
        run: |
          echo "=== tail server.log ==="
          tail -n 200 server.log || true

      - name: Diagnostica contenuto data/ e diff
        if: ${{ always() }}
        run: |
          echo "Workspace: $GITHUB_WORKSPACE"
          find data -maxdepth 3 -type f -name "*.json" -print | sort || true
          echo "--- changed files ---"
          git status --porcelain

      - name: Commit & Push (rebase su origin/main)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add data
          if git diff --cached --quiet; then
            echo "Nessuna modifica trovata."
            exit 0
          fi

          git commit -m "chore(show): auto-update SHOW e ANALYSIS (scheduled)"

          git fetch origin main
          git rebase origin/main || (echo "Rebase fallito, annullo"; git rebase --abort; exit 1)

          git push origin HEAD:main